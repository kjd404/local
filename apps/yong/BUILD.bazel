package(default_visibility = ["//visibility:private"])
load("@pip//:requirements.bzl", "requirement")
load("//tools/sql:postgres_test.bzl", "postgres_pytest")

config_setting(
    name = "is_macos",
    constraint_values = ["@platforms//os:macos"],
)

config_setting(
    name = "ocr_backend_paddle_override",
    define_values = {"ocr_backend": "paddle"},
)

filegroup(
    name = "example_receipts",
    srcs = glob(["src/test/resources/examples/**"]),
    visibility = ["//visibility:public"],
)

py_library(
    name = "yong_lib",
    srcs = glob(
        ["src/yong/**/*.py"],
        exclude = ["src/yong/ocr/**/*.py"],
    ),
    imports = ["src"],
    deps = [
        "//apps/yong/src/yong/ocr:ocr_lib",
        requirement("numpy"),
        requirement("einops"),
        requirement("ftfy"),
        requirement("imagesize"),
        requirement("Jinja2"),
        requirement("lxml"),
        requirement("opencv-contrib-python"),
        requirement("openpyxl"),
        requirement("premailer"),
        requirement("psycopg"),
        requirement("pyclipper"),
        requirement("pypdfium2"),
        requirement("regex"),
        requirement("scikit-learn"),
        requirement("shapely"),
        requirement("tiktoken"),
        requirement("tokenizers"),
        requirement("pillow"),
    ],
)

py_binary(
    name = "receipt_cli",
    srcs = ["src/yong/cli/receipt_cli.py"],
    main = "src/yong/cli/receipt_cli.py",
    imports = ["src"],
    deps = [":yong_lib"],
    data = [
        ":example_receipts",
        "//apps/yong:ocr_service_binary",
    ],
    visibility = ["//visibility:public"],
)

alias(
    name = "ocr_service_binary_default",
    actual = select({
        ":is_macos": "//apps/yong/mac_vision_ocr:ocr_service",
        "//conditions:default": "//apps/yong/src/yong/ocr:paddle_ocr_service_bin",
    }),
)

alias(
    name = "ocr_service_binary",
    actual = select({
        ":ocr_backend_paddle_override": "//apps/yong/src/yong/ocr:paddle_ocr_service_bin",
        "//conditions:default": "//apps/yong:ocr_service_binary_default",
    }),
    visibility = ["//visibility:public"],
)

postgres_pytest(
    name = "yong_tests",
    sql_dir = "ops/sql/yong",
    env_prefix = "YONG",
    history_table = "flyway_yong_schema_history",
    pytest_args = ["apps/yong/tests"],
    data = glob([
        "tests/**/*.py",
        "src/test/resources/**/*",
    ]) + [
        "//ops/sql/yong:sql_files",
        "//apps/yong/tests/ocr/golden:sample_receipt_photo_01_response_paddle.json",
        "//apps/yong/tests/ocr/golden:sample_receipt_photo_01_response_vision.json",
        "//apps/yong:ocr_service_binary",
    ],
    deps = [
        ":yong_lib",
        requirement("numpy"),
        requirement("pillow"),
    ],
    visibility = ["//visibility:public"],
)
